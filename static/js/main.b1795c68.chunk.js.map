{"version":3,"sources":["components/Gift.js","components/Results.js","components/Sheet.js","App.js","serviceWorker.js","index.js"],"names":["Gift","console","log","this","props","id","e","preventDefault","className","onClick","goToGift","bind","href","link","target","alt","title","rel","description","saveGift","viewBox","d","React","Component","Results","Sheet","isOpen","close","App","state","isSheetOpen","newState","setState","closeSheet","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mTA2BeA,G,+LAtBXC,QAAQC,IAAI,gBAAkBC,KAAKC,MAAMC,M,+BAIlCC,GACPA,EAAEC,iBACFN,QAAQC,IAAI,oB,+BAIZ,OACE,uBAAGM,UAAU,OAAOC,QAASN,KAAKO,SAASC,KAAKR,MAAOS,KAAMT,KAAKC,MAAMS,KAAMC,OAAO,SAASC,IAAKZ,KAAKC,MAAMY,MAAOC,IAAI,uBACvH,yBAAKT,UAAU,SAASL,KAAKC,MAAMY,OACnC,8BAAOb,KAAKC,MAAMc,aAClB,yBAAKV,UAAU,OAAOC,QAASN,KAAKgB,SAASR,KAAKR,OAChD,yBAAKiB,QAAQ,aAAY,0BAAMC,EAAE,2K,GAjBxBC,IAAMC,YCcVC,E,iLAZX,OACE,8BACE,yCACA,kBAAC,EAAD,CAAMnB,GAAG,KAAKW,MAAM,oBAAoBH,KAAK,uEAAuEK,YAAY,kJAChI,kBAAC,EAAD,CAAMb,GAAG,KAAKW,MAAM,gBAAgBH,KAAK,uCAAuCK,YAAY,oGAC5F,kBAAC,EAAD,CAAMb,GAAG,KAAKW,MAAM,oBAAoBE,YAAY,mGACpD,kBAAC,EAAD,CAAMb,GAAG,KAAKW,MAAM,4BAA4BE,YAAY,0E,GAR9CI,IAAMC,WCgCbE,G,uLA9BX,OACC,yBAAKjB,UAAWL,KAAKC,MAAMsB,OAAS,aAAe,gBAC9C,yBAAKlB,UAAU,UAAUC,QAASN,KAAKC,MAAMuB,QAC7C,yBAAKnB,UAAU,UACb,+DACA,mDACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACf,6CAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACf,2CAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACf,2CAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACf,8C,GAvBIc,IAAMC,YC2BXK,E,YAvBb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDyB,MAAQ,CACXC,aAAa,GAHE,E,0EAQjB,IAAIC,EAAW5B,KAAK0B,MACpBE,EAASD,aAAc,EACvB3B,KAAK6B,SAASD,K,+BAId,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOL,OAAQvB,KAAK0B,MAAMC,YAAaH,MAAOxB,KAAK8B,WAAWtB,KAAKR,a,GAlBzDmB,IAAMC,WCMJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b1795c68.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Gift.css';\r\n\r\nclass Gift extends React.Component {\r\n  goToGift() {\r\n    console.log(\"clicked link \" + this.props.id);\r\n    // Some UI change for recently viewed gifts\r\n  }\r\n\r\n  saveGift(e) {\r\n    e.preventDefault();\r\n    console.log(\"Save gift here\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a className=\"gift\" onClick={this.goToGift.bind(this)} href={this.props.link} target=\"_blank\" alt={this.props.title} rel=\"noopener noreferrer\">\r\n        <div className=\"title\">{this.props.title}</div>\r\n        <span>{this.props.description}</span>\r\n        <div className=\"save\" onClick={this.saveGift.bind(this)}>\r\n          <svg viewBox=\"0 0 24 24\"><path d=\"M17.016 18v-12.984h-10.031v12.984l5.016-2.203zM17.016 3q0.797 0 1.383 0.609t0.586 1.406v15.984l-6.984-3-6.984 3v-15.984q0-0.797 0.586-1.406t1.383-0.609h10.031z\"></path></svg>\r\n        </div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gift;","import React from 'react';\r\nimport Gift from \"./Gift\";\r\n\r\nclass Results extends React.Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h2>Top Picks</h2>\r\n        <Gift id=\"0A\" title=\"Front Page Framed\" link=\"https://store.nytimes.com/products/new-york-times-front-page-reprint\" description=\"Straight from The Times archives, framed and unframed reprints are available of more than 58,000 historical front pages published since 1851.\" />\r\n        <Gift id=\"4D\" title=\"Bartender Kit\" link=\"https://www.amazon.com/dp/B07B9KLRDC\" description=\"A shaker, a jigger, and a mixerâ€”everything one needs to master the art of mixing cocktails\" />\r\n        <Gift id=\"6E\" title=\"Whiskey Glass Set\" description=\"A quality set of whistkey glasses is what differentiates a hobbiest from a whiskey connoisseur\" />\r\n        <Gift id=\"2C\" title=\"Travel-size DIY Cocktails\" description=\"Treat them to their favorite drinks while 30,000 feet in the air\" />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport './Sheet.css';\r\n\r\nclass Sheet extends React.Component {  \r\n  render() {\r\n    return (\r\n     <div className={this.props.isOpen ? \"slide open\" : \"slide closed\"}>\r\n          <div className=\"overlay\" onClick={this.props.close} />\r\n          <div className=\"drawer\">\r\n            <h2>Let's find you the perfect gift</h2>\r\n            <h3>Who's the gift for?</h3>\r\n            <div className=\"options\">\r\n              <div className=\"option\">\r\n                <div className=\"icon\" />\r\n                <span>Mixologist</span>\r\n              </div>\r\n              <div className=\"option\">\r\n                <div className=\"icon\" />\r\n                <span>Botanist</span>\r\n              </div>\r\n              <div className=\"option\">\r\n                <div className=\"icon\" />\r\n                <span>Traveler</span>\r\n              </div>\r\n              <div className=\"option\">\r\n                <div className=\"icon\" />\r\n                <span>Chef</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sheet;","import React from 'react';\nimport './App.css';\n\nimport Results from \"./components/Results\";\nimport Sheet from \"./components/Sheet\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSheetOpen: true\n    };\n  }\n  \n  closeSheet() {\n    let newState = this.state;\n    newState.isSheetOpen = false;\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <Results />\n        <Sheet isOpen={this.state.isSheetOpen} close={this.closeSheet.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}